[[subgoals.xml_to_miros|back]],  [[xml_to_miros]]
*Parallel*
= Observer ([[local:C:/Vim8.1/.vim/ooda.pdf|diagram]]) = 
== Evidence ([[evidence.parallel|evidence]]) ==

  *What defines Success?:* ([[subgoals.parallel|subgoals]])
    To implement parallel regions to an arbitrary level with SCXML.

  *What is the problem?*
  
    Miros does not implement orthogonal regions, it only supports orthogonal
    components.
    
    I have demonstrated in the past how to do with with miros, but only to one
    level.  We would like parallel regions to work at an arbitrary level.
    
    I do not understand this problem well enough to define the requirements for
    the SCXML project.
    
    *NOTE 1:* I do not know if I want to support the final behavior of the SCXML
    requirement, since magically posting signals seems really stupid.  The
    posting of events should happen by explicit design, not implicitly due to
    someone's design preferences.
    
    *NOTE 2:* this is actually a core requirement, not like other aspects of the
    SCXML (noisy)

  *Discoveries:* ([[notes.parallel|notes]])
  
  [[file:///C:/github/miros/docs/othogonalregions.html|old write up]]
  [[https://github.com/aleph2c/miros/blob/master/examples/xml_chart.py|old code]]
  
= Orient =
  *Symptoms:* [[symptoms.parallel|symptoms]]

== Questions ==
  *Questions for Parallel: >= 5*
    Can you think of anyway to speed up your feedback cycle?
    Do you have enough information?
    Is your information organized?
    Can you reproduce the problem?
    Can you simplify your test?
    Do you have something to baseline from?
    What recently changed?
    What don't you know that you need to know?
  
  *Assumptions*

= Decide =
  [[#Questions]]
  *Research Needed For?:*
 
  In the experiment folder, using the ActiveObject class and flat state methods
  implement: 
  * [ ] xml_chart_2
  * [ ] xml_chart_3 
  Add requirements/hypothesis/ideas to this plan as
  you work through the problem.
  
  Timebox your work, really hustle in how you attack these problems.  Use your
  previous work as a reference.

  [[#Questions]]
  *Idea/Hypotheses for Parallel: >=5*
  * [ ] Extend instrumentation as described in the xml_chart example above
  * [ ] 
  * [ ] 
  * [ ] 
  * [ ] 

  *Chosen Research-Goal/Hypothesis*
    

== Plan ([[plan.parallel|plan]]) ==

= Act =
  

